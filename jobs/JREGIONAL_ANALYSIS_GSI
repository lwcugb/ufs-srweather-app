#!/bin/bash

#
#-----------------------------------------------------------------------
#
# This J-JOB script runs the GSI analysis 
#      for the FV3-LAM model
#
# Description:
#
#  The script decides which ensemble members to use, if any, links all 
#  necessary gridded files, links observation files, links fix files,
#  runs gsi.x, and cleans up the output.
#
# Arguments needed in the corresponding ex-script:
#
#  NWGES_BASEDIR
#  FIXgsi
#  CYCLE_TYPE
#  DA_CYCLE_INTERV
#  CYCL_HRS_HYB_FV3LAM_ENS
#  NUM_ENS_MEMBERS
#  ENKF_FCST
#  HYBENSMEM_NMIN
#
#-----------------------------------------------------------------------

#
#-----------------------------------------------------------------------
#
# Source the variable definitions file and the bash utility functions.
#
#-----------------------------------------------------------------------
#
. $USHdir/source_util_funcs.sh
source_config_for_task "task_analysis_gsi" ${GLOBAL_VAR_DEFNS_FP}
. $USHdir/job_preamble.sh "TRUE"
#
#-----------------------------------------------------------------------
#
# Save current shell options (in a global array).  Then set new options
# for this script/function.
#
#-----------------------------------------------------------------------
#
{ save_shell_opts; . $USHdir/preamble.sh; } > /dev/null 2>&1
#
#-----------------------------------------------------------------------
#
# Get the full path to the file in which this script/function is located 
# (scrfunc_fp), the name of that file (scrfunc_fn), and the directory in
# which the file is located (scrfunc_dir).
#
#-----------------------------------------------------------------------
#
scrfunc_fp=$( readlink -f "${BASH_SOURCE[0]}" )
scrfunc_fn=$( basename "${scrfunc_fp}" )
scrfunc_dir=$( dirname "${scrfunc_fp}" )
#
#-----------------------------------------------------------------------
#
# Print message indicating entry into script.
#
#-----------------------------------------------------------------------
#
print_info_msg "
========================================================================
Entering script:  \"${scrfunc_fn}\"
In directory:     \"${scrfunc_dir}\"
This is the J-job script for the task that runs a analysis with FV3 for 
the specified cycle.
========================================================================"
#
#-----------------------------------------------------------------------
#
# Create the working directory under the cycle directory.
#
#-----------------------------------------------------------------------
# CYCLE_TYPE is to indicate which type of cycle this job for:
#   spinup: this job is for spin-up cycles
#   others(prod): this job is for product cycle
#
CYCLE_TYPE=${CYCLE_TYPE:-prod}
export OBSERVER_NWGES_DIR=""

if [ ${CYCLE_TYPE} == "spinup" ]; then
  analysis_workname="_gsi_spinup"
else
  analysis_workname="_gsi"
fi

if [[ ! -v OB_TYPE ]]; then
  export OB_TYPE="conv"
fi
if [ ${GSI_TYPE} == "OBSERVER" ]; then
  if [ ${MEM_TYPE} == "MEAN" ]; then
    DATA="${DATA:-${COMIN}}/ensmean/observer${analysis_workname}"
    SLASH_ENSMEM_SUBDIR=""
    export OBSERVER_NWGES_DIR="${NWGES_DIR}/ensmean/observer${analysis_workname}"
  else
    DATA="${DATA:-${COMIN}${SLASH_ENSMEM_SUBDIR}}/observer${analysis_workname}"
    export OBSERVER_NWGES_DIR="${NWGES_DIR}${SLASH_ENSMEM_SUBDIR}/observer${analysis_workname}"
  fi
  mkdir_vrfy -p ${OBSERVER_NWGES_DIR}
else
  DATA="${DATA:-${COMIN}${SLASH_ENSMEM_SUBDIR}/analysis_${OB_TYPE}${analysis_workname}}"
fi

mkdir_vrfy -p ${DATA}

if [ ! -d "${SATBIAS_DIR}" ]; then
  echo "makding satbias_dir directory for cycling bias correction files" 
  mkdir_vrfy -p ${SATBIAS_DIR}
fi
#
#-----------------------------------------------------------------------
#
# create COMOUT directory
#
#-----------------------------------------------------------------------

if [ "${RUN_ENVIR}" = "nco" ]; then
  COMOUT="${COMOUT_BASEDIR}/$RUN.$PDY/$cyc${SLASH_ENSMEM_SUBDIR}"
  if [ ${CYCLE_TYPE} == "spinup" ]; then
    COMOUT="${COMOUT_BASEDIR}/$RUN.$PDY/${cyc}_spinup${SLASH_ENSMEM_SUBDIR}"
  fi
  mkdir_vrfy -p "${COMOUT}"
fi
#
#-----------------------------------------------------------------------
#
# Call the ex-script for this J-job and pass to it the necessary varia-
# bles.
#
#-----------------------------------------------------------------------
#
$SCRIPTSdir/exregional_analysis_gsi.sh || print_err_msg_exit "\
Call to ex-script corresponding to J-job \"${scrfunc_fn}\" failed."
#
#-----------------------------------------------------------------------
#
# Run job postamble.
#
#-----------------------------------------------------------------------
#
job_postamble
#
#-----------------------------------------------------------------------
#
# Restore the shell options saved at the beginning of this script/func-
# tion.
#
#-----------------------------------------------------------------------
#
{ restore_shell_opts; } > /dev/null 2>&1
